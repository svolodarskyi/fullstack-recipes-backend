{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Recipes App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of students app"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000"
    },
    {
      "url": "https://fullstack-recipes-backend-ssa1.onrender.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "User operations."
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "operationId": "registerUser",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "name": {
                    "type": "string",
                    "example": "Full Name"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponseSchema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a user",
        "operationId": "loginUser",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseSchema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Refresh the access token",
        "operationId": "refreshToken",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "description": "The refresh token, which is passed through cookies, used to generate a new access token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New access token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseSchema"
                },
                "example": {
                  "status": 200,
                  "message": "Successfully refreshed a session!",
                  "data": {
                    "accessToken": "kRvdeii1acPo2gCp06mMjNyDGyrw6pkd+OlOur8r"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, e.g. missing or malformed refresh token cookie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "example": {
                  "status": 400,
                  "message": "Invalid refresh token",
                  "data": "Refresh token cookie is missing or malformed"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, e.g. invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "example": {
                  "status": 401,
                  "message": "Something went wrong",
                  "data": "Refresh token is invalid or expired"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Log out the user",
        "operationId": "logoutUser",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "description": "The refresh token, passed through cookies, used to log out the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logged out, no content returned"
          },
          "400": {
            "description": "Bad request, typically missing or invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "example": {
                  "status": 400,
                  "message": "Invalid refresh token",
                  "data": "Refresh token cookie is missing or malformed"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, if no valid session exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "example": {
                  "status": 401,
                  "message": "Something went wrong",
                  "data": "Not authenticated"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "Get current user profile",
        "description": "Returns information about the currently authenticated user.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Profile retrieved successfully!" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": { "$ref": "#/components/schemas/UserSchema" }
                      }
                    }
                  },
                  "required": ["status", "message", "data"]
                },
                "example": {
                  "status": 200,
                  "message": "Profile retrieved successfully!",
                  "data": {
                    "user": {
                      "_id": "60c72b2f9b1e8e001c8e4b8a",
                      "name": "John Doe",
                      "email": "john@example.com"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/api/users/session": {
      "get": {
        "summary": "Get current session info",
        "description": "Returns information about the current user session.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Session retrieved successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Session retrieved successfully!" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "session": { "$ref": "#/components/schemas/SessionSchema" }
                      }
                    }
                  },
                  "required": ["status", "message", "data"]
                },
                "example": {
                  "status": 200,
                  "message": "Session retrieved successfully!",
                  "data": {
                    "session": {
                      "id": "60c72b2f9b1e8e001c8e4b8b",
                      "accessTokenValidUntil": "2024-07-01T12:00:00.000Z",
                      "refreshTokenValidUntil": "2024-07-08T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "400": {
        "description": "Invalid request or bad input",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "example": {
              "status": 400,
              "message": "Something went wrong",
              "data": "\"email\" is required, \"emai\" is not allowed"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized access",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "example": {
              "status": 401,
              "message": "Not authenticated"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 403
                },
                "message": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            },
            "example": {
              "message": "Not found"
            }
          }
        }
      },
      "409": {
        "description": "Conflict - user already exists",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponseSchema"
            },
            "example": {
              "status": 409,
              "message": "Something went wrong",
              "data": "Email in use"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error. Something went wrong on the server.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "string",
                  "example": "Error details"
                }
              }
            },
            "example": {
              "status": 500,
              "message": "Something went wrong",
              "data": "Error details"
            }
          }
        }
      },
      "Unauthorized": {
        "$ref": "#/components/responses/401"
      },
      "Forbidden": {
        "$ref": "#/components/responses/403"
      },
      "BadRequest": {
        "$ref": "#/components/responses/400"
      },
      "NotFound": {
        "$ref": "#/components/responses/404"
      }
    },
    "schemas": {
      "RegistrationResponseSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Successfully registered a user!"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "67f39f29e3c363521e0ae31d"
              },
              "name": {
                "type": "string",
                "example": "Ful Name"
              },
              "email": {
                "type": "string",
                "example": "e-mail@example.com"
              }
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "ErrorResponseSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized"
          },
          "data": {
            "type": "string",
            "example": "\"email\" is required, \"emai\" is not allowed"
          }
        },
        "required": [
          "status",
          "message"
        ]
      },
      "LoginResponseSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code of the response",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Message associated with the login response",
            "example": "Successfully logged in a user!"
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "JWT access token for the user",
                "example": "n1IiOgOQDeYgt0GHLY/8yJu3Bin3WZHcVT+J+jFB"
              }
            }
          }
        },
        "required": [
          "status",
          "message",
          "data"
        ]
      },
      "UserSchema": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "example": "60c72b2f9b1e8e001c8e4b8a" },
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "john@example.com" }
        },
        "required": ["_id", "name", "email"]
      },
      "SessionSchema": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "60c72b2f9b1e8e001c8e4b8b" },
          "accessTokenValidUntil": { "type": "string", "format": "date-time", "example": "2024-07-01T12:00:00.000Z" },
          "refreshTokenValidUntil": { "type": "string", "format": "date-time", "example": "2024-07-08T12:00:00.000Z" }
        },
        "required": ["id", "accessTokenValidUntil", "refreshTokenValidUntil"]
      }
    }
  }
}
